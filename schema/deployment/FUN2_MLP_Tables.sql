drop table trigger_owner.mlp_log;drop table trigger_owner.mlp_services;drop table trigger_owner.mlp_service_cycles;drop table trigger_owner.mlp_messages;create table trigger_owner.mlp_log (  id              number not null,   msisdn          varchar2(12) not null,   soc_id          varchar2(60) not null,   service_cycle   varchar2(30) not null,   start_date      date not null,   expiry_date     date,   num_days        number not null,   cycle_no        varchar2(30) not null,   transaction_id  varchar2(30),   transaction_code varchar2(30),   mcc varchar2(20),  mnc varchar2(20),  last_usage_dt   date,  last_usage_tm   date,  usage_expiry    date,  remaining_days  number,  pre_expiry_notif date,  expiry_notif    date,  status          varchar2(12) default 'ACTIVE',  last_usage_dt_utc date,  dt_created      date  not null,   created_by      varchar2(30) not null,  constraint mlp_log_pk primary key (id) using index tablespace trigger_indx,  constraint mlp_log_uk unique (msisdn,soc_id) using index tablespace trigger_indx ) tablespace trigger_data;create index trigger_owner.mlp_log_status_idx on trigger_owner.mlp_log(status) tablespace trigger_indx;create index trigger_owner.mlp_log_status_idx on trigger_owner.mlp_log(status) tablespace trigger_indx;create table trigger_owner.mlp_log_history (  id              number not null,   msisdn          varchar2(12) not null,   soc_id          varchar2(60) not null,   service_cycle   varchar2(30) not null,   start_date      date not null,   expiry_date     date not null,   num_days        number not null,   cycle_no        varchar2(30) not null,   transaction_id  varchar2(30),   transaction_code varchar2(30),   mcc varchar2(20),  mnc varchar2(20),  last_usage_dt   date,  last_usage_tm   date,  usage_expiry    date,  remaining_days  number,  pre_expiry_notif date,  expiry_notif    date,  status          varchar2(12) default 'INACTIVE',  dt_created      date  not null,   created_by      varchar2(30) not null,  dt_deleted      date,   deleted_by      varchar2(30) ) tablespace trigger_data; create table trigger_owner.mlp_services (  soc_id          varchar2(60) not null,   service_name    varchar2(60) not null,   num_days  number,   service_cycle   varchar2(30) default 'MONTHLY' not null,   dt_created      date  not null,   created_by      varchar2(30) not null,  constraint mlp_services_pk primary key (soc_id) using index tablespace trigger_indx ) tablespace trigger_data;insert into trigger_owner.mlp_services values ('43406105', 'Test Platinum - Unli Data Roam 4 days', 4, 'NONE', sysdate, user);insert into trigger_owner.mlp_services values ('4194805', 'Platinum - Unli Data Roam 4 days', 4, 'MONTHLY', sysdate, user);insert into trigger_owner.mlp_services values ('4195195', 'Add On - Easy Roam 149', 4, 'NONE', sysdate, user);commit;create sequence trigger_owner.mlp_svc_cycle_seq start with 1 increment by 1;create table trigger_owner.mlp_service_cycles ( id          number not null,  cycle_no    varchar2(8) not null,  cycle_day   number not null,  dt_created  date  not null,  created_by  varchar2(30) not null, constraint mlp_service_cycles_pk primary key (id) using index tablespace trigger_indx) tablespace trigger_data;delete from trigger_owner.mlp_service_cycles;insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '6',    6, user, sysdate); insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '10',  10, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '11',  11, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '13',  13, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '16',  16, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '18',  18, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '21',  21, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '24',  24, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, '27',  27, user, sysdate);insert into trigger_owner.mlp_service_cycles (id, cycle_no, cycle_day, created_by, dt_created) values (trigger_owner.mlp_svc_cycle_seq.nextval, 'BC1',  1, user, sysdate);create table trigger_owner.mlp_partners (  provider_code varchar2(20) not null,   provider_name varchar2(120) not null,   telecom_name  varchar2(120) not null,   country_code  varchar2(20),   country_name  varchar2(120),   mcc varchar2(20),  mnc varchar2(20),  dt_created  date  not null,   created_by  varchar2(30) not null,  constraint mlp_partners_pk primary key (provider_code) using index tablespace trigger_indx,  constraint mlp_partners_uk unique(mcc, mnc) using index tablespace trigger_indx ) tablespace trigger_data;create table trigger_owner.mlp_messages (  id           varchar2(30) not null,   soc_id       varchar2(60) not null,   message_type varchar2(60) not null,   message      varchar2(2000) not null,   dt_created   date  not null,   created_by    varchar2(30) not null,  constraint mlp_messages_pk primary key (id) using index tablespace trigger_indx ) tablespace trigger_data;delete from trigger_owner.mlp_messages;insert into trigger_owner.mlp_messages values (1, '43406105', 'ACTIVATION', 'Hi! Good News! Your mobile data usage is covered by Easy Roam. You have <REMDAYS> remaining Roam Surf days with your Easy Roam subscription. To continue consuming the remaining days of your Easy Roam subscription, simply keep your data roaming on after every 24 hour session has been completed. Data roaming use after fully consuming your Easy Roam days will be charged with the regular Roam Surf rate of P599. If you don''t wish to use up your Easy Roam Allocation or be charged P599, turn off your mobile data/data roaming and LTE connection (if applicable). Make sure to stay connected with <PARTNER>. For info, dial *143# toll-free.', sysdate, user);insert into trigger_owner.mlp_messages values (2, '43406105', 'PRE-EXPIRY', 'Thank you for using Easy Roam! Just a reminder, your current Roam Surf usage is valid until <ENDTIME> EST time. If you''d like to continue using your remaining Roam Surf days with your Easy Roam subscription, just keep your mobile data and data roaming on. Note that keeping your data roaming on after fully consuming your Easy Roam days will be charged the regular Roam Surf rate of P599. Make sure to stay connected to <PARTNER>. If you don''t wish to use up your Easy Roam Allocation or be charged P599, turn off your mobile data/data roaming and LTE connection (if applicable). Make sure to stay connected with <PARTNER>. For info, dial *143# toll-free.', sysdate, user);insert into trigger_owner.mlp_messages values (3, '43406105', 'EXPIRY',     'Hi! Your Roam Surf ended on <ENDTIME> EST time. You have <REMDAYS> remaining Roam Surf days with your Easy Roam subscription. Your next Roam Surf session will be charged against any remaining Easy Roam days. After which, you will be charged the regular rate of P599. Just keep your mobile data and data roaming on. If you don''t wish to use up your Easy Roam allocation or be charged P599, please turn off your phone''s mobile data/data roaming and LTE connection (if applicable) immediately. Just make sure to stay connected to <PARTNER>. For info, dial *143# toll-free.', sysdate, user);insert into trigger_owner.mlp_messages values (4, '43406106', 'ACTIVATION', 'Hi! Your mobile internet usage is now covered by Easy Roam. You have <REMDAYS> day/s remaining in your Easy Roam subscription. To keep using, simply leave your data roaming on after every 24-hour session. Once you use up all of your Easy Roam subscription, use of data roaming will be charged the regular Roam Surf rate of P599/day. If you don''t wish to use your Easy Roam subscription or be charged with P599/day, turn off your mobile data/data roaming and LTE connection (if applicable). Make sure to stay connected with <PARTNER>. For info, dial *143# toll-free.', sysdate, user);insert into trigger_owner.mlp_messages values (5, '43406106', 'PRE-EXPIRY', 'Thank you for using Easy Roam! Just a reminder, your current Roam Surf usage is valid until <ENDTIME> EST time. To continue using, simply leave your data roaming on after every 24-hour session. Once you use up your Easy Roam subscription, use of data roaming will be charged the regular Roam Surf rate of P599/day. If you don''t wish to use your Easy Roam subscription or be charged with P599/day, turn off your mobile data/data roaming and LTE connection (if applicable). Make sure to stay connected with <PARTNER>.', sysdate, user);insert into trigger_owner.mlp_messages values (6, '43406106', 'EXPIRY',     'Hi! Your data roaming usage ended on <ENDTIME> est. time. You still have <REMDAYS> day/s remaining in your Easy Roam subscription. Your next data roaming usage will be covered by any remaining Easy Roam subscription. Once fully used up, you''ll be charged the regular Roam Surf rate of P599/24 hrs. if you leave your mobile data/data roaming on. Don''t wish to use Easy Roam subscription or be charged with P599/24 hrs.? Turn off your phone''s mobile data/data roaming and LTE (if applicable) immediately. Make sure you stay connected to <ROAMING PARTNER>. For more info, dial *143# toll-free using your Globe mobile.', sysdate, user);create sequence trigger_owner.mlp_seq start with 1 increment by 1;;alter table trigger_owner.broadcast_log add dt_created date;create or replace trigger trigger_owner.broadcast_log_insert_triggerbefore insert on broadcast_logfor each rowbegin   :new.dt_created := sysdate;end broadcast_log_insert_trigger;/                          